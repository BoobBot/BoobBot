buildscript {
    repositories {
        mavenCentral()
        //jcenter()
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


plugins {
    id "idea"
    id "application"
    id "com.github.johnrengelman.shadow" version "6.0.0"
    id "org.jetbrains.kotlin.jvm" version "1.2.70"
}


group "bot.boobbot"
version getBuildVersion()
mainClassName = "bot.boobbot.BoobBot"


repositories {
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}


dependencies {
    /* Discord Stuff */
    implementation ("net.dv8tion:JDA:$jda_version") {
        exclude module: 'opus-java'
    }

    /* Audio */
    implementation "com.github.devoxin.lavaplayer:lavaplayer:$lp_version"
    implementation "com.sedmelluq:jda-nas:$nas_version"

    /* Kotlin Stuff */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coro_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlin_coro_version"

    /* Logging */
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.sentry:sentry-logback:$sentry_version"
    implementation 'org.codehaus.janino:janino:3.1.9'

    /* Webserver */
    implementation "com.google.code.gson:gson:2.9.1"

    /* Eval */
//    implementation "org.jetbrains.kotlin:kotlin-script-runtime:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-script-util:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-scripting-jsr223:$kotlin_version"

    /* Misc */
    implementation "com.github.SvenWoltmann:color-thief-java:$color_thief_version"
    implementation "org.reflections:reflections:$reflections_version"
    implementation "io.github.cdimascio:java-dotenv:5.2.2"
    implementation "org.javadelight:delight-metrics:0.0.6"
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.mongodb:mongodb-driver-sync:4.7.1'
    implementation "io.ktor:ktor-server-netty-jvm:$ktor_version"
    implementation "io.ktor:ktor-server-websockets-jvm:$ktor_version"
    implementation "io.ktor:ktor-serialization-gson:$ktor_version"
    implementation "io.ktor:ktor-server-auth-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-apache-jvm:$ktor_version"
    implementation "io.ktor:ktor-server-html-builder-jvm:$ktor_version"
    implementation "io.ktor:ktor-server-auto-head-response:$ktor_version"
    implementation "io.ktor:ktor-server-default-headers:$ktor_version"
    implementation "io.ktor:ktor-server-forwarded-header:$ktor_version"
    implementation "io.ktor:ktor-server-call-logging:$ktor_version"
    implementation "io.ktor:ktor-server-content-negotiation-jvm:$ktor_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jsoup:jsoup:$jsoup_version"
    implementation "org.json:json:$json_version"
}

shadowJar {
    archiveFileName = "bb.jar"
}

String jvmTarget = JavaVersion.VERSION_12

compileKotlin {
    kotlinOptions.jvmTarget = jvmTarget.toString()
}

compileJava {
    sourceCompatibility = jvmTarget
    targetCompatibility = jvmTarget
}

def getBuildVersion() {
    def gitVersion = new ByteArrayOutputStream()
    exec {
        commandLine("git", "rev-parse", "--short", "HEAD")
        standardOutput = gitVersion
    }
    return gitVersion.toString().trim()
}

tasks.register('writeVersion') {
    new File("src/main/resources", "version.txt").text = getBuildVersion()
}

build {
    dependsOn writeVersion
}
